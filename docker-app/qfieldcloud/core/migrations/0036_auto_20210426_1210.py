# Generated by Django 3.2 on 2021-04-26 12:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    def refactor_status_forward(apps, schema_editor):
        Job = apps.get_model("core", "Job")
        Job.objects.filter(status=1).update(status_str="queued")
        Job.objects.filter(status=2).update(status_str="deferred")
        Job.objects.filter(status=3).update(status_str="finished")
        Job.objects.filter(status=4).update(status_str="failed")

    def refactor_status_backward(apps, schema_editor):
        Job = apps.get_model("core", "Job")
        Job.objects.filter(status_str="queued").update(status=1)
        Job.objects.filter(status_str="started").update(status=2)
        Job.objects.filter(status_str="deferred").update(status=2)
        Job.objects.filter(status_str="stopped").update(status=2)
        Job.objects.filter(status_str="finished").update(status=3)
        Job.objects.filter(status_str="failed").update(status=4)

    def add_created_by(apps, schema_editor):
        Job = apps.get_model("core", "Job")

        for job in Job.objects.all():
            job.created_by = job.project.owner
            job.save()

    def add_export_jobs_forward(apps, schema_editor):
        Job = apps.get_model("core", "Job")
        ExportJob = apps.get_model("core", "ExportJob")

        for job in Job.objects.all():
            ExportJob.objects.create(pk=job.pk, exportlog=job.exportlog)

    def add_export_jobs_backward(apps, schema_editor):
        Job = apps.get_model("core", "Job")
        ExportJob = apps.get_model("core", "ExportJob")

        for export_job in ExportJob.objects.all():
            Job.objects.filter(pk=export_job.pk).update(exportlog=export_job.exportlog)

    def refactor_deltas_status_forward(apps, schema_editor):
        Delta = apps.get_model("core", "Delta")

        Delta.objects.filter(status=1).update(last_status="pending")
        Delta.objects.filter(status=2).update(last_status="started")
        Delta.objects.filter(status=3).update(last_status="applied")
        Delta.objects.filter(status=4).update(last_status="conflict")
        Delta.objects.filter(status=5).update(last_status="not_applied")
        Delta.objects.filter(status=6).update(last_status="error")
        Delta.objects.filter(status=7).update(last_status="ignored")
        Delta.objects.filter(status=8).update(last_status="unpermitted")

    def refactor_deltas_status_backward(apps, schema_editor):
        Delta = apps.get_model("core", "Delta")

        Delta.objects.filter(last_status="pending").update(status=1)
        Delta.objects.filter(last_status="started").update(status=2)
        Delta.objects.filter(last_status="applied").update(status=3)
        Delta.objects.filter(last_status="conflict").update(status=4)
        Delta.objects.filter(last_status="not_applied").update(status=5)
        Delta.objects.filter(last_status="error").update(status=6)
        Delta.objects.filter(last_status="ignored").update(status=7)
        Delta.objects.filter(last_status="unpermitted").update(status=8)

    def refactor_deltas_forward(apps, schema_editor):
        Delta = apps.get_model("core", "Delta")
        ApplyJob = apps.get_model("core", "ApplyJob")
        ApplyJobDelta = apps.get_model("core", "ApplyJobDelta")

        ApplyJob.objects.all().delete()

        for delta in Delta.objects.all():
            apply_job = ApplyJob.objects.create(
                project=delta.project,
                created_by=delta.created_by,
                overwrite_conflicts=True,
                status="finished",
                type="delta_apply",
            )

            ApplyJobDelta.objects.create(
                apply_job=apply_job,
                delta=delta,
                status=delta.last_status,
                feedback=delta.last_feedback,
            )

    dependencies = [
        ("core", "0035_auto_20210510_0635"),
    ]

    operations = [
        migrations.RenameModel(
            old_name="Exportation",
            new_name="Job",
        ),
        migrations.AddField(
            model_name="job",
            name="type",
            field=models.CharField(
                choices=[("export", "Export"), ("delta_apply", "Delta Apply")],
                max_length=32,
                default="export",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="job",
            name="status_str",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("queued", "Queued"),
                    ("started", "Started"),
                    ("finished", "Finished"),
                    ("stopped", "Stopped"),
                    ("failed", "Failed"),
                ],
                default="pending",
                max_length=32,
            ),
            preserve_default=False,
        ),
        migrations.RunPython(refactor_status_forward, refactor_status_backward),
        migrations.RemoveField(
            model_name="job",
            name="status",
        ),
        migrations.RenameField(
            model_name="job",
            old_name="status_str",
            new_name="status",
        ),
        migrations.AddField(
            model_name="job",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.user", null=True
            ),
            preserve_default=False,
        ),
        migrations.RunPython(add_created_by, migrations.RunPython.noop),
        migrations.AlterField(
            model_name="job",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.user"
            ),
        ),
        # no idea why, but it is needed
        migrations.AlterField(
            model_name="job",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("queued", "Queued"),
                    ("started", "Started"),
                    ("finished", "Finished"),
                    ("stopped", "Stopped"),
                    ("failed", "Failed"),
                ],
                default="queued",
                max_length=32,
            ),
        ),
        migrations.CreateModel(
            name="ExportJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.job",
                    ),
                ),
                (
                    "exportlog",
                    models.JSONField(null=True),
                ),
            ],
        ),
        migrations.RunPython(add_export_jobs_forward, add_export_jobs_backward),
        migrations.RemoveField(
            model_name="job",
            name="exportlog",
        ),
        migrations.CreateModel(
            name="ApplyJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.job",
                    ),
                ),
            ],
            bases=("core.job",),
        ),
        migrations.AddField(
            model_name="applyjob",
            name="overwrite_conflicts",
            field=models.BooleanField(
                default=True,
                help_text="If enabled, QFieldCloud will automatically overwrite conflicts while applying deltas.",
            ),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name="ApplyJobDelta",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("started", "Started"),
                            ("applied", "Applied"),
                            ("conflict", "Conflict"),
                            ("not_applied", "Not_applied"),
                            ("error", "Error"),
                            ("ignored", "Ignored"),
                            ("unpermitted", "Unpermitted"),
                        ],
                        default="pending",
                        max_length=32,
                    ),
                ),
                ("feedback", models.JSONField(null=True)),
                (
                    "delta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.delta"
                    ),
                ),
                (
                    "apply_job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.applyjob",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="applyjob",
            name="deltas_to_apply",
            field=models.ManyToManyField(through="core.ApplyJobDelta", to="core.Delta"),
        ),
        migrations.RenameField(
            model_name="delta",
            old_name="output",
            new_name="last_feedback",
        ),
        migrations.AddField(
            model_name="delta",
            name="last_status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("started", "Started"),
                    ("applied", "Applied"),
                    ("conflict", "Conflict"),
                    ("not_applied", "Not_applied"),
                    ("error", "Error"),
                    ("ignored", "Ignored"),
                    ("unpermitted", "Unpermitted"),
                ],
                default="pending",
                max_length=32,
            ),
        ),
        migrations.RunPython(
            refactor_deltas_status_forward, refactor_deltas_status_backward
        ),
        migrations.RemoveField(
            model_name="delta",
            name="status",
        ),
        migrations.RunSQL("SET CONSTRAINTS ALL IMMEDIATE;", migrations.RunSQL.noop),
        migrations.RunPython(refactor_deltas_forward, migrations.RunPython.noop),
        migrations.RunSQL("SET CONSTRAINTS ALL DEFERRED;", migrations.RunSQL.noop),
    ]
